<?xml version="1.0" ?>
<sdf version='1.6'>
  <!--
      This adds a model of the micro underwater robot HippoCampus, developed at the Institute of Mechanics and Ocean Engineering at TU Hamburg, Germany.
      The model is based on the publications:
      A. Hackbarth, E. Kreuzer, and E. Solowjow. HippoCampus: A Micro Underwater Vehicle for Swarm Applications. In IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), Hamburg, Germany, 2015
      D.-A. Duecker, A. Hackbarth, T. Johannink, E. Kreuzer, and E. Solowjow. Micro Underwater Vehicle Hydrobatics: A Submerged Furuta Pendulum. In IEEE International Conference on Robotics and Automation (ICRA), Brisbane, Australia, 2018

      Please find more information under https://www.tuhh.de/mum/forschung/forschungsgebiete-und-projekte/flow-field-estimation-with-a-swarm-of-auvs.html

      The following model description starts with the first link, the base (hippocampus without rotors). The pose is relative to the given frame.
      The hydrodynamic effects are modelled as forces/moments, see 'UpdateForcesAndMoments'-method in the uuv plugin.
  -->
  <model name='uuv_hippocampus'>
    <static>0</static>
    <self_collide>false</self_collide>
    <link name='body'>

      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <!--
          These values are a compromise between the dry mass and added mass
          values used to correct for hydrodynamic effects.
          Real values:  m = 1,47 kg; Ixx = 0,002408 kgm2; Iyy = Izz = 0.010717 kgm2
                        Xu = -1,11 kg; Yv = Zw = -2,8 kg; Kp = -0,00451 kgm2; Mq = Nr = -0,0163 kgm2
        -->
        <mass>0.07</mass>
        <inertia>
          <ixx>0.0024</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.010717</iyy>
          <iyz>0</iyz>
          <izz>0.010717</izz>
        </inertia>
      </inertial>
      <visual name='body_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://uuv_hippocampus/meshes/uuv_hippocampus.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Grey</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>

        <collision name='body_collision'>
          <pose>0 0 0 0 1.570796 0</pose>
          <geometry>
      <!--      <cylinder>
              <radius>0.04</radius>
              <length>0.36</length>
            </cylinder>-->
            <sphere>
              <radius>1.04</radius>
            </sphere>
          </geometry>
        <!--  <surface>
            <contact>
              <ode>
                <min_depth>0.001</min_depth>
                <max_vel>0</max_vel>
              </ode>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>-->
        </collision>

      <velocity_decay/>
<!--
        <sensor name="air_pressure_sensor" type="air_pressure">
          <always_on>1</always_on>
          <update_rate>50</update_rate>
          <air_pressure>
            <pressure>
              <noise type="gaussian">
                <mean>0</mean>
                <stddev>0.01</stddev>
              </noise>
            </pressure>
          </air_pressure>
        </sensor>
        <sensor name="imu_sensor" type="imu">
          <always_on>1</always_on>
          <update_rate>250</update_rate>
        </sensor>-->
    </link>

<!--
    Now the rotors are defined on which the forces and moments attack. They are positioned relative to the center
    of the Hippocampus. Also a collision cylinder will be defined for each rotor to reduce computation time.
-->
<!-- CCW 1-->
<!-- rotor_0 link -->
    <link name='rotor_0'>
      <pose>-0.05 0.0481 0.0481 0 1.570796 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_0_collision'>
        <pose>0 0 0.02 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.02</radius>
            <length>0.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_0_visual'>
        <pose>0 0 0 0 -1.570796 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <velocity_decay/>
    </link>

<!-- rotor_0 joint -->
    <joint name='rotor_0_joint' type='revolute'>
      <parent>body</parent>
      <child>rotor_0</child>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

<!-- CW 2 -->
<!-- rotor_1 link -->
    <link name='rotor_1'>
      <pose>-0.05 -0.0481 0.0481 0 1.570796 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_1_collision'>
        <pose>0 0 0.02 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.02</radius>
            <length>0.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_1_visual'>
        <pose>0 0 0 0 -1.570796 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Green</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <velocity_decay/>
    </link>

<!-- rotor_1 joint -->
    <joint name='rotor_1_joint' type='revolute'>
    <child>rotor_1</child>
      <parent>body</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

<!-- CCW 3 -->
<!-- rotor_2 link -->
    <link name='rotor_2'>
      <pose>-0.05 -0.0481 -0.0481 0 1.570796 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_2_collision'>
        <pose>0 0 0.02 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.02</radius>
            <length>0.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_2_visual'>
        <pose>0 0 0 0 -1.570796 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <velocity_decay/>
    </link>

<!-- rotor_2 joint -->
    <joint name='rotor_2_joint' type='revolute'>
      <child>rotor_2</child>
      <parent>body</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

<!-- CW 4 -->
<!-- rotor_3 link -->
    <link name='rotor_3'>
      <pose>-0.05 0.0481 -0.0481 0 1.570796 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_3_collision'>
        <pose>0 0 0.02 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.02</radius>
            <length>0.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_3_visual'>
        <pose>0 0 0 0 -1.570796 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <velocity_decay/>
    </link>

<!-- rotor_3 joint -->
    <joint name='rotor_3_joint' type='revolute'>
      <child>rotor_3</child>
      <parent>body</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>


<!-- Plugins -->



      <plugin filename="gz-sim-multicopter-motor-model-system" name="gz::sim::systems::MulticopterMotorModel">
         <jointName>rotor_0_joint</jointName>
         <linkName>rotor_0</linkName>
         <turningDirection>ccw</turningDirection>
         <timeConstantUp>0.0125</timeConstantUp>
         <timeConstantDown>0.025</timeConstantDown>
         <maxRotVelocity>1000.0</maxRotVelocity>
         <motorConstant>8.54858e-06</motorConstant>
         <momentConstant>0.016</momentConstant>
         <commandSubTopic>command/motor_speed</commandSubTopic>
         <motorNumber>0</motorNumber>
         <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
         <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
         <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
         <motorType>velocity</motorType>
       </plugin>
       <plugin filename="gz-sim-multicopter-motor-model-system" name="gz::sim::systems::MulticopterMotorModel">
         <jointName>rotor_1_joint</jointName>
         <linkName>rotor_1</linkName>
         <turningDirection>ccw</turningDirection>
         <timeConstantUp>0.0125</timeConstantUp>
         <timeConstantDown>0.025</timeConstantDown>
         <maxRotVelocity>1000.0</maxRotVelocity>
         <motorConstant>8.54858e-06</motorConstant>
         <momentConstant>0.016</momentConstant>
         <commandSubTopic>command/motor_speed</commandSubTopic>
         <motorNumber>1</motorNumber>
         <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
         <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
         <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
         <motorType>velocity</motorType>
       </plugin>
       <plugin filename="gz-sim-multicopter-motor-model-system" name="gz::sim::systems::MulticopterMotorModel">
         <jointName>rotor_2_joint</jointName>
         <linkName>rotor_2</linkName>
         <turningDirection>cw</turningDirection>
         <timeConstantUp>0.0125</timeConstantUp>
         <timeConstantDown>0.025</timeConstantDown>
         <maxRotVelocity>1000.0</maxRotVelocity>
         <motorConstant>8.54858e-06</motorConstant>
         <momentConstant>0.016</momentConstant>
         <commandSubTopic>command/motor_speed</commandSubTopic>
         <motorNumber>2</motorNumber>
         <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
         <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
         <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
         <motorType>velocity</motorType>
       </plugin>
       <plugin filename="gz-sim-multicopter-motor-model-system" name="gz::sim::systems::MulticopterMotorModel">
         <jointName>rotor_3_joint</jointName>
         <linkName>rotor_3</linkName>
         <turningDirection>cw</turningDirection>
         <timeConstantUp>0.0125</timeConstantUp>
         <timeConstantDown>0.025</timeConstantDown>
         <maxRotVelocity>1000.0</maxRotVelocity>
         <motorConstant>8.54858e-06</motorConstant>
         <momentConstant>0.016</momentConstant>
         <commandSubTopic>command/motor_speed</commandSubTopic>
         <motorNumber>3</motorNumber>
         <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
         <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
         <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
         <motorType>velocity</motorType>
       </plugin>

  </model>
</sdf>
